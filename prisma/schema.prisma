// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  avatar  String
  language String
  phone String
  address String
  sex String
  dob String
  events   Event[]
  invites Invite[]
  login Login?
  role Role? @relation(fields: [roleId], references: [id])
  roleId Int  @default(2)
}

model Login {
  id        Int     @id @default(autoincrement())
  username  String
  password  String
  token    String
  refreshToken String
  user      User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  userId    Int      @unique
}
model Role {
  id Int @id @default(autoincrement())
  role String
  user User[]
}

model Event {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String
  description String
  eventCategoryId Int
  eventCardImage String
  published  Boolean    @default(false)
  owner      User       @relation(fields: [ownerId], references: [id])
  ownerId   Int
  eventItenary EventItenary[]
  status Boolean
  invite Invite[]
  ticketTotalCount Int
}



model Invite {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  status     Boolean    @default(false)
  invitedBy  User     @relation(fields: [inviterId], references: [id])
  inviterId  Int
  ticket Tickets?
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId Int
  email String
}

model Tickets {
  id Int @id @default(autoincrement())
  invite Invite @relation(fields: [inviteId],references: [id], onDelete: Cascade)
  inviteId Int @unique
  status Boolean
  ticketCode String
 
}

model EventCategory {
  id Int @id @default(autoincrement())
  name String
}

model EventItenary {
  id Int @id @default(autoincrement())
  eventId Int
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  schedule String
  description String
}

